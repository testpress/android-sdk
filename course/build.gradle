apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName VERSION_NAME
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }
}

dependencies {
    api project(':core')
    api project(':exam')
    api rootProject.design
    api 'com.google.android.exoplayer:exoplayer-core:' + rootProject.exoPlayer
    api 'com.google.android.exoplayer:exoplayer-ui:' + rootProject.exoPlayer
    api 'com.google.android.exoplayer:exoplayer-hls:' + rootProject.exoPlayer
    api rootProject.constraintLayout
    api rootProject.mediarouter
    testImplementation rootProject.junit
    testImplementation rootProject.mockito
    testImplementation rootProject.powermockJunit
    testImplementation rootProject.roboelectric
    testImplementation rootProject.androidxCore
    testImplementation rootProject.mockServer
    testImplementation (rootProject.powermockMockio) {
        exclude group: 'org.mockito'
    }

    androidTestImplementation rootProject.junit
    androidTestImplementation rootProject.testRunner
    compile project(path: ':store')
    testImplementation rootProject.mockServer
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')