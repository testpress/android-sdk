package in.testpress.models.greendao;

import org.greenrobot.greendao.annotation.*;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import android.os.Parcel;

import java.net.MalformedURLException;
import java.net.URL;

import in.testpress.util.CommonUtils;
// KEEP INCLUDES END

/**
 * Entity mapped to table "ATTEMPT_SECTION".
 */
@Entity
public class AttemptSection implements android.os.Parcelable {

    @Id
    private Long id;
    private String state;
    private String questionsUrl;
    private String startUrl;
    private String endUrl;
    private String remainingTime;
    private String name;
    private String duration;
    private Integer order;
    private Long attemptId;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    @Generated
    public AttemptSection() {
    }

    public AttemptSection(Long id) {
        this.id = id;
    }

    @Generated
    public AttemptSection(Long id, String state, String questionsUrl, String startUrl, String endUrl, String remainingTime, String name, String duration, Integer order, Long attemptId) {
        this.id = id;
        this.state = state;
        this.questionsUrl = questionsUrl;
        this.startUrl = startUrl;
        this.endUrl = endUrl;
        this.remainingTime = remainingTime;
        this.name = name;
        this.duration = duration;
        this.order = order;
        this.attemptId = attemptId;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getState() {
        return state;
    }

    public void setState(String state) {
        this.state = state;
    }

    public String getQuestionsUrl() {
        return questionsUrl;
    }

    public void setQuestionsUrl(String questionsUrl) {
        this.questionsUrl = questionsUrl;
    }

    public String getStartUrl() {
        return startUrl;
    }

    public void setStartUrl(String startUrl) {
        this.startUrl = startUrl;
    }

    public String getEndUrl() {
        return endUrl;
    }

    public void setEndUrl(String endUrl) {
        this.endUrl = endUrl;
    }

    public String getRemainingTime() {
        return remainingTime;
    }

    public void setRemainingTime(String remainingTime) {
        this.remainingTime = remainingTime;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDuration() {
        return duration;
    }

    public void setDuration(String duration) {
        this.duration = duration;
    }

    public Integer getOrder() {
        return order;
    }

    public void setOrder(Integer order) {
        this.order = order;
    }

    public Long getAttemptId() {
        return attemptId;
    }

    public void setAttemptId(Long attemptId) {
        this.attemptId = attemptId;
    }

    // KEEP METHODS - put your custom methods here
    protected AttemptSection(Parcel in) {
        if (in.readByte() == 0) {
            id = null;
        } else {
            id = in.readLong();
        }
        state = in.readString();
        questionsUrl = in.readString();
        startUrl = in.readString();
        endUrl = in.readString();
        remainingTime = in.readString();
        name = in.readString();
        duration = in.readString();
        if (in.readByte() == 0) {
            order = null;
        } else {
            order = in.readInt();
        }
        if (in.readByte() == 0) {
            attemptId = null;
        } else {
            attemptId = in.readLong();
        }
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        if (id == null) {
            dest.writeByte((byte) 0);
        } else {
            dest.writeByte((byte) 1);
            dest.writeLong(id);
        }
        dest.writeString(state);
        dest.writeString(questionsUrl);
        dest.writeString(startUrl);
        dest.writeString(endUrl);
        dest.writeString(remainingTime);
        dest.writeString(name);
        dest.writeString(duration);
        if (order == null) {
            dest.writeByte((byte) 0);
        } else {
            dest.writeByte((byte) 1);
            dest.writeInt(order);
        }
        if (attemptId == null) {
            dest.writeByte((byte) 0);
        } else {
            dest.writeByte((byte) 1);
            dest.writeLong(attemptId);
        }
    }

    @Override
    public int describeContents() {
        return 0;
    }

    public static final Creator<AttemptSection> CREATOR = new Creator<AttemptSection>() {
        @Override
        public AttemptSection createFromParcel(Parcel in) {
            return new AttemptSection(in);
        }

        @Override
        public AttemptSection[] newArray(int size) {
            return new AttemptSection[size];
        }
    };

    public String getQuestionsUrlFrag() {
        return CommonUtils.getUrlFrag(questionsUrl);
    }

    public String getStartUrlFrag() {
        return CommonUtils.getUrlFrag(startUrl);
    }

    public String getEndUrlFrag() {
        return CommonUtils.getUrlFrag(endUrl);
    }
    // KEEP METHODS END

}
