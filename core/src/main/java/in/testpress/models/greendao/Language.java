package in.testpress.models.greendao;

import org.greenrobot.greendao.annotation.*;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
import android.os.Parcel;
// KEEP INCLUDES END

/**
 * Entity mapped to table "LANGUAGE".
 */
@Entity(indexes = {
    @Index(value = "code, examId", unique = true)
})
public class Language implements android.os.Parcelable {

    @Id(autoincrement = true)
    private Long id;
    private String code;
    private String title;
    private Long examId;

    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    @Generated
    public Language() {
    }

    public Language(Long id) {
        this.id = id;
    }

    @Generated
    public Language(Long id, String code, String title, Long examId) {
        this.id = id;
        this.code = code;
        this.title = title;
        this.examId = examId;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getCode() {
        return code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public Long getExamId() {
        return examId;
    }

    public void setExamId(Long examId) {
        this.examId = examId;
    }

    // KEEP METHODS - put your custom methods here
    protected Language(Parcel in) {
        if (in.readByte() == 0) {
            id = null;
        } else {
            id = in.readLong();
        }
        code = in.readString();
        title = in.readString();
        if (in.readByte() == 0) {
            examId = null;
        } else {
            examId = in.readLong();
        }
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        if (id == null) {
            dest.writeByte((byte) 0);
        } else {
            dest.writeByte((byte) 1);
            dest.writeLong(id);
        }
        dest.writeString(code);
        dest.writeString(title);
        if (examId == null) {
            dest.writeByte((byte) 0);
        } else {
            dest.writeByte((byte) 1);
            dest.writeLong(examId);
        }
    }

    @Override
    public int describeContents() {
        return 0;
    }

    public static final Creator<Language> CREATOR = new Creator<Language>() {
        @Override
        public Language createFromParcel(Parcel in) {
            return new Language(in);
        }

        @Override
        public Language[] newArray(int size) {
            return new Language[size];
        }
    };

    public Language(Language language) {
        code = language.getCode();
        title = language.getTitle();
    }

    public void update(Language language) {
        code = language.getCode();
        title = language.getTitle();
    }
    // KEEP METHODS END

}
