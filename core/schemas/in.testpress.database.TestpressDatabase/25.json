{
  "formatVersion": 1,
  "database": {
    "version": 25,
    "identityHash": "8438af03ac4d3fd3e5def989921cddb8",
    "entities": [
      {
        "tableName": "ContentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `description` TEXT, `image` TEXT, `url` TEXT NOT NULL, `chapterSlug` TEXT NOT NULL, `chapterUrl` TEXT, `modified` TEXT, `examUrl` TEXT, `videoUrl` TEXT, `attachmentUrl` TEXT, `htmlUrl` TEXT, `isLocked` INTEGER NOT NULL, `isScheduled` INTEGER NOT NULL, `attemptsCount` INTEGER NOT NULL, `bookmarkId` INTEGER, `videoWatchedPercentage` INTEGER, `active` INTEGER NOT NULL, `htmlId` INTEGER, `hasStarted` INTEGER NOT NULL, `isCourseAvailable` INTEGER, `coverImageSmall` TEXT, `coverImageMedium` TEXT, `coverImage` TEXT, `nextContentId` INTEGER, `hasEnded` INTEGER, `examStartUrl` TEXT, `order` INTEGER, `chapterId` INTEGER, `freePreview` INTEGER, `title` TEXT, `courseId` INTEGER, `examId` INTEGER, `contentId` INTEGER, `videoId` INTEGER, `attachmentId` INTEGER, `liveStreamId` INTEGER, `contentType` TEXT, `icon` TEXT, `start` TEXT, `end` TEXT, `treePath` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "chapterSlug",
            "columnName": "chapterSlug",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "chapterUrl",
            "columnName": "chapterUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "modified",
            "columnName": "modified",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "examUrl",
            "columnName": "examUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "videoUrl",
            "columnName": "videoUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attachmentUrl",
            "columnName": "attachmentUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlUrl",
            "columnName": "htmlUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isLocked",
            "columnName": "isLocked",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isScheduled",
            "columnName": "isScheduled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attemptsCount",
            "columnName": "attemptsCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bookmarkId",
            "columnName": "bookmarkId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "videoWatchedPercentage",
            "columnName": "videoWatchedPercentage",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "htmlId",
            "columnName": "htmlId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "hasStarted",
            "columnName": "hasStarted",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isCourseAvailable",
            "columnName": "isCourseAvailable",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "coverImageSmall",
            "columnName": "coverImageSmall",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImageMedium",
            "columnName": "coverImageMedium",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "coverImage",
            "columnName": "coverImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "nextContentId",
            "columnName": "nextContentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "hasEnded",
            "columnName": "hasEnded",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "examStartUrl",
            "columnName": "examStartUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "freePreview",
            "columnName": "freePreview",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "examId",
            "columnName": "examId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "videoId",
            "columnName": "videoId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attachmentId",
            "columnName": "attachmentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "liveStreamId",
            "columnName": "liveStreamId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "start",
            "columnName": "start",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "end",
            "columnName": "end",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treePath",
            "columnName": "treePath",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineVideo",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `title` TEXT, `description` TEXT, `remoteThumbnail` TEXT, `localThumbnail` TEXT, `duration` TEXT NOT NULL, `url` TEXT, `contentId` INTEGER, `percentageDownloaded` INTEGER NOT NULL, `bytesDownloaded` INTEGER NOT NULL, `totalSize` INTEGER NOT NULL, `courseId` INTEGER, `lastWatchPosition` TEXT, `watchedTimeRanges` TEXT NOT NULL, `syncState` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "remoteThumbnail",
            "columnName": "remoteThumbnail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "localThumbnail",
            "columnName": "localThumbnail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "percentageDownloaded",
            "columnName": "percentageDownloaded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "bytesDownloaded",
            "columnName": "bytesDownloaded",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalSize",
            "columnName": "totalSize",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastWatchPosition",
            "columnName": "lastWatchPosition",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "watchedTimeRanges",
            "columnName": "watchedTimeRanges",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "syncState",
            "columnName": "syncState",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ProductEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `endDate` TEXT, `image` TEXT, `surl` TEXT, `title` TEXT, `paymentLink` TEXT, `buyNowText` TEXT, `furl` TEXT, `descriptionHtml` TEXT, `currentPrice` TEXT, `slug` TEXT, `startDate` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "surl",
            "columnName": "surl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "paymentLink",
            "columnName": "paymentLink",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "buyNowText",
            "columnName": "buyNowText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "furl",
            "columnName": "furl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "descriptionHtml",
            "columnName": "descriptionHtml",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "currentPrice",
            "columnName": "currentPrice",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "PriceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `name` TEXT, `price` TEXT, `validity` INTEGER, `endDate` TEXT, `startDate` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "validity",
            "columnName": "validity",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CourseEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `image` TEXT, `examsCount` INTEGER, `created` TEXT, `description` TEXT, `title` TEXT, `chaptersCount` INTEGER, `deviceAccessControl` TEXT, `createdBy` INTEGER, `enableDiscussions` INTEGER, `url` TEXT, `contentsCount` INTEGER, `contentsUrl` TEXT, `chaptersUrl` TEXT, `modified` TEXT, `videosCount` INTEGER, `externalContentLink` TEXT, `attachmentsCount` INTEGER, `slug` TEXT, `htmlContentsCount` INTEGER, `order` INTEGER, `externalLinkLabel` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "image",
            "columnName": "image",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "examsCount",
            "columnName": "examsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "chaptersCount",
            "columnName": "chaptersCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "deviceAccessControl",
            "columnName": "deviceAccessControl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy",
            "columnName": "createdBy",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "enableDiscussions",
            "columnName": "enableDiscussions",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentsCount",
            "columnName": "contentsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentsUrl",
            "columnName": "contentsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "chaptersUrl",
            "columnName": "chaptersUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "modified",
            "columnName": "modified",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "videosCount",
            "columnName": "videosCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "externalContentLink",
            "columnName": "externalContentLink",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attachmentsCount",
            "columnName": "attachmentsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "htmlContentsCount",
            "columnName": "htmlContentsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "externalLinkLabel",
            "columnName": "externalLinkLabel",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ProductCourseEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`courseId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, PRIMARY KEY(`productId`, `courseId`))",
        "fields": [
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "productId",
            "courseId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ProductPriceEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`priceId` INTEGER NOT NULL, `productId` INTEGER NOT NULL, PRIMARY KEY(`productId`, `priceId`))",
        "fields": [
          {
            "fieldPath": "priceId",
            "columnName": "priceId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "productId",
            "columnName": "productId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "productId",
            "priceId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CommentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `url` TEXT, `userEmail` TEXT, `userUrl` TEXT, `comment` TEXT, `submitDate` TEXT, `upvotes` INTEGER, `downvotes` INTEGER, `typeOfVote` INTEGER, `voteId` INTEGER, `created` TEXT, `modified` TEXT, `contentId` INTEGER, `contentUrl` TEXT, `profileId` INTEGER, `profileUrl` TEXT, `username` TEXT, `displayName` TEXT, `firstName` TEXT, `lastName` TEXT, `email` TEXT, `photo` TEXT, `largeImage` TEXT, `mediumImage` TEXT, `smallImage` TEXT, `xSmallImage` TEXT, `miniImage` TEXT, `birthDate` TEXT, `gender` TEXT, `address1` TEXT, `address2` TEXT, `city` TEXT, `zip` TEXT, `state` TEXT, `stateChoices` TEXT, `phone` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userEmail",
            "columnName": "userEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "userUrl",
            "columnName": "userUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment",
            "columnName": "comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "submitDate",
            "columnName": "submitDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "upvotes",
            "columnName": "upvotes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "downvotes",
            "columnName": "downvotes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "typeOfVote",
            "columnName": "typeOfVote",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "voteId",
            "columnName": "voteId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "modified",
            "columnName": "modified",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentObject.id",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentObject.url",
            "columnName": "contentUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.id",
            "columnName": "profileId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "user.url",
            "columnName": "profileUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.photo",
            "columnName": "photo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.largeImage",
            "columnName": "largeImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.mediumImage",
            "columnName": "mediumImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.smallImage",
            "columnName": "smallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.xSmallImage",
            "columnName": "xSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.miniImage",
            "columnName": "miniImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.birthDate",
            "columnName": "birthDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.gender",
            "columnName": "gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.address1",
            "columnName": "address1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.address2",
            "columnName": "address2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.city",
            "columnName": "city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.zip",
            "columnName": "zip",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.stateChoices",
            "columnName": "stateChoices",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "user.phone",
            "columnName": "phone",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionPostEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `shortWebUrl` TEXT, `shortUrl` TEXT, `webUrl` TEXT, `created` TEXT, `commentsUrl` TEXT, `url` TEXT, `modified` TEXT, `upvotes` INTEGER, `downvotes` INTEGER, `title` TEXT, `summary` TEXT, `isActive` INTEGER, `publishedDate` TEXT, `commentsCount` INTEGER, `isLocked` INTEGER, `subject` INTEGER, `viewsCount` INTEGER, `participantsCount` INTEGER, `lastCommentedTime` TEXT, `contentHtml` TEXT, `isPublic` INTEGER, `shortLink` TEXT, `institute` INTEGER, `slug` TEXT, `isPublished` INTEGER, `isApproved` INTEGER, `forum` INTEGER, `ipAddress` TEXT, `voteId` INTEGER, `typeOfVote` INTEGER, `published` INTEGER, `modifiedDate` INTEGER, `creatorId` INTEGER, `commentorId` INTEGER, `categoryId` INTEGER, `created_by_id` INTEGER, `created_by_url` TEXT, `created_by_username` TEXT, `created_by_firstName` TEXT, `created_by_lastName` TEXT, `created_by_displayName` TEXT, `created_by_photo` TEXT, `created_by_largeImage` TEXT, `created_by_mediumImage` TEXT, `created_by_mediumSmallImage` TEXT, `created_by_smallImage` TEXT, `created_by_xSmallImage` TEXT, `created_by_miniImage` TEXT, `last_commented_by_id` INTEGER, `last_commented_by_url` TEXT, `last_commented_by_username` TEXT, `last_commented_by_firstName` TEXT, `last_commented_by_lastName` TEXT, `last_commented_by_displayName` TEXT, `last_commented_by_photo` TEXT, `last_commented_by_largeImage` TEXT, `last_commented_by_mediumImage` TEXT, `last_commented_by_mediumSmallImage` TEXT, `last_commented_by_smallImage` TEXT, `last_commented_by_xSmallImage` TEXT, `last_commented_by_miniImage` TEXT, `category_id` INTEGER, `category_name` TEXT, `category_color` TEXT, `category_slug` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "shortWebUrl",
            "columnName": "shortWebUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "shortUrl",
            "columnName": "shortUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "webUrl",
            "columnName": "webUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "created",
            "columnName": "created",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentsUrl",
            "columnName": "commentsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "modified",
            "columnName": "modified",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "upvotes",
            "columnName": "upvotes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "downvotes",
            "columnName": "downvotes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "summary",
            "columnName": "summary",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isActive",
            "columnName": "isActive",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "publishedDate",
            "columnName": "publishedDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentsCount",
            "columnName": "commentsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isLocked",
            "columnName": "isLocked",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "subject",
            "columnName": "subject",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "viewsCount",
            "columnName": "viewsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "participantsCount",
            "columnName": "participantsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedTime",
            "columnName": "lastCommentedTime",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "contentHtml",
            "columnName": "contentHtml",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isPublic",
            "columnName": "isPublic",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "shortLink",
            "columnName": "shortLink",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "institute",
            "columnName": "institute",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isPublished",
            "columnName": "isPublished",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isApproved",
            "columnName": "isApproved",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "forum",
            "columnName": "forum",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "ipAddress",
            "columnName": "ipAddress",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "voteId",
            "columnName": "voteId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "typeOfVote",
            "columnName": "typeOfVote",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "published",
            "columnName": "published",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "modifiedDate",
            "columnName": "modifiedDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "creatorId",
            "columnName": "creatorId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "commentorId",
            "columnName": "commentorId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "categoryId",
            "columnName": "categoryId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.id",
            "columnName": "created_by_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.url",
            "columnName": "created_by_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.username",
            "columnName": "created_by_username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.firstName",
            "columnName": "created_by_firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.lastName",
            "columnName": "created_by_lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.displayName",
            "columnName": "created_by_displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.photo",
            "columnName": "created_by_photo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.largeImage",
            "columnName": "created_by_largeImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.mediumImage",
            "columnName": "created_by_mediumImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.mediumSmallImage",
            "columnName": "created_by_mediumSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.smallImage",
            "columnName": "created_by_smallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.xSmallImage",
            "columnName": "created_by_xSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "createdBy.miniImage",
            "columnName": "created_by_miniImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.id",
            "columnName": "last_commented_by_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.url",
            "columnName": "last_commented_by_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.username",
            "columnName": "last_commented_by_username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.firstName",
            "columnName": "last_commented_by_firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.lastName",
            "columnName": "last_commented_by_lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.displayName",
            "columnName": "last_commented_by_displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.photo",
            "columnName": "last_commented_by_photo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.largeImage",
            "columnName": "last_commented_by_largeImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.mediumImage",
            "columnName": "last_commented_by_mediumImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.mediumSmallImage",
            "columnName": "last_commented_by_mediumSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.smallImage",
            "columnName": "last_commented_by_smallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.xSmallImage",
            "columnName": "last_commented_by_xSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastCommentedBy.miniImage",
            "columnName": "last_commented_by_miniImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category.id",
            "columnName": "category_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "category.name",
            "columnName": "category_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category.color",
            "columnName": "category_color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "category.slug",
            "columnName": "category_slug",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "LastLoadedPageData",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`resourceType` TEXT NOT NULL, `previous` INTEGER, `next` INTEGER, PRIMARY KEY(`resourceType`))",
        "fields": [
          {
            "fieldPath": "resourceType",
            "columnName": "resourceType",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "previous",
            "columnName": "previous",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "next",
            "columnName": "next",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "resourceType"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UserEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `url` TEXT, `username` TEXT, `firstName` TEXT, `lastName` TEXT, `displayName` TEXT, `photo` TEXT, `largeImage` TEXT, `mediumImage` TEXT, `mediumSmallImage` TEXT, `smallImage` TEXT, `xSmallImage` TEXT, `miniImage` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "firstName",
            "columnName": "firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "lastName",
            "columnName": "lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "displayName",
            "columnName": "displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "photo",
            "columnName": "photo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "largeImage",
            "columnName": "largeImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mediumImage",
            "columnName": "mediumImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "mediumSmallImage",
            "columnName": "mediumSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "smallImage",
            "columnName": "smallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "xSmallImage",
            "columnName": "xSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "miniImage",
            "columnName": "miniImage",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "CategoryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `name` TEXT, `color` TEXT, `slug` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "color",
            "columnName": "color",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "DiscussionThreadAnswerEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `forumThreadId` INTEGER, `approved_by_id` INTEGER, `approved_by_url` TEXT, `approved_by_username` TEXT, `approved_by_firstName` TEXT, `approved_by_lastName` TEXT, `approved_by_displayName` TEXT, `approved_by_photo` TEXT, `approved_by_largeImage` TEXT, `approved_by_mediumImage` TEXT, `approved_by_mediumSmallImage` TEXT, `approved_by_smallImage` TEXT, `approved_by_xSmallImage` TEXT, `approved_by_miniImage` TEXT, `comment_id` INTEGER, `comment_url` TEXT, `comment_userEmail` TEXT, `comment_userUrl` TEXT, `comment_comment` TEXT, `comment_submitDate` TEXT, `comment_upvotes` INTEGER, `comment_downvotes` INTEGER, `comment_typeOfVote` INTEGER, `comment_voteId` INTEGER, `comment_created` TEXT, `comment_modified` TEXT, `comment_contentId` INTEGER, `comment_contentUrl` TEXT, `comment_profileId` INTEGER, `comment_profileUrl` TEXT, `comment_username` TEXT, `comment_displayName` TEXT, `comment_firstName` TEXT, `comment_lastName` TEXT, `comment_email` TEXT, `comment_photo` TEXT, `comment_largeImage` TEXT, `comment_mediumImage` TEXT, `comment_smallImage` TEXT, `comment_xSmallImage` TEXT, `comment_miniImage` TEXT, `comment_birthDate` TEXT, `comment_gender` TEXT, `comment_address1` TEXT, `comment_address2` TEXT, `comment_city` TEXT, `comment_zip` TEXT, `comment_state` TEXT, `comment_stateChoices` TEXT, `comment_phone` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "forumThreadId",
            "columnName": "forumThreadId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.id",
            "columnName": "approved_by_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.url",
            "columnName": "approved_by_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.username",
            "columnName": "approved_by_username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.firstName",
            "columnName": "approved_by_firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.lastName",
            "columnName": "approved_by_lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.displayName",
            "columnName": "approved_by_displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.photo",
            "columnName": "approved_by_photo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.largeImage",
            "columnName": "approved_by_largeImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.mediumImage",
            "columnName": "approved_by_mediumImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.mediumSmallImage",
            "columnName": "approved_by_mediumSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.smallImage",
            "columnName": "approved_by_smallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.xSmallImage",
            "columnName": "approved_by_xSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "approvedBy.miniImage",
            "columnName": "approved_by_miniImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.id",
            "columnName": "comment_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment.url",
            "columnName": "comment_url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.userEmail",
            "columnName": "comment_userEmail",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.userUrl",
            "columnName": "comment_userUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.comment",
            "columnName": "comment_comment",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.submitDate",
            "columnName": "comment_submitDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.upvotes",
            "columnName": "comment_upvotes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment.downvotes",
            "columnName": "comment_downvotes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment.typeOfVote",
            "columnName": "comment_typeOfVote",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment.voteId",
            "columnName": "comment_voteId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment.created",
            "columnName": "comment_created",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.modified",
            "columnName": "comment_modified",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.contentObject.id",
            "columnName": "comment_contentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment.contentObject.url",
            "columnName": "comment_contentUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.id",
            "columnName": "comment_profileId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.url",
            "columnName": "comment_profileUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.username",
            "columnName": "comment_username",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.displayName",
            "columnName": "comment_displayName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.firstName",
            "columnName": "comment_firstName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.lastName",
            "columnName": "comment_lastName",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.email",
            "columnName": "comment_email",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.photo",
            "columnName": "comment_photo",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.largeImage",
            "columnName": "comment_largeImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.mediumImage",
            "columnName": "comment_mediumImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.smallImage",
            "columnName": "comment_smallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.xSmallImage",
            "columnName": "comment_xSmallImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.miniImage",
            "columnName": "comment_miniImage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.birthDate",
            "columnName": "comment_birthDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.gender",
            "columnName": "comment_gender",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.address1",
            "columnName": "comment_address1",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.address2",
            "columnName": "comment_address2",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.city",
            "columnName": "comment_city",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.zip",
            "columnName": "comment_zip",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.state",
            "columnName": "comment_state",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.stateChoices",
            "columnName": "comment_stateChoices",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "comment.user.phone",
            "columnName": "comment_phone",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ProductCategoryEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `name` TEXT, `slug` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "RunningContentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `type` INTEGER NOT NULL, `order` INTEGER, `chapterId` INTEGER, `freePreview` INTEGER, `title` TEXT, `courseId` INTEGER, `examId` INTEGER, `contentId` INTEGER, `videoId` INTEGER, `attachmentId` INTEGER, `liveStreamId` INTEGER, `contentType` TEXT, `icon` TEXT, `start` TEXT, `end` TEXT, `treePath` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "freePreview",
            "columnName": "freePreview",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "examId",
            "columnName": "examId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "videoId",
            "columnName": "videoId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attachmentId",
            "columnName": "attachmentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "liveStreamId",
            "columnName": "liveStreamId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "start",
            "columnName": "start",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "end",
            "columnName": "end",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treePath",
            "columnName": "treePath",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "RunningContentRemoteKeys",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentId` INTEGER NOT NULL, `prevKey` INTEGER, `nextKey` INTEGER, `courseId` INTEGER NOT NULL, `type` INTEGER NOT NULL, PRIMARY KEY(`contentId`))",
        "fields": [
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "prevKey",
            "columnName": "prevKey",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nextKey",
            "columnName": "nextKey",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "contentId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UpcomingContentEntity",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `order` INTEGER, `chapterId` INTEGER, `freePreview` INTEGER, `title` TEXT, `courseId` INTEGER, `examId` INTEGER, `contentId` INTEGER, `videoId` INTEGER, `attachmentId` INTEGER, `liveStreamId` INTEGER, `contentType` TEXT, `icon` TEXT, `start` TEXT, `end` TEXT, `treePath` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "chapterId",
            "columnName": "chapterId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "freePreview",
            "columnName": "freePreview",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "examId",
            "columnName": "examId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "videoId",
            "columnName": "videoId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attachmentId",
            "columnName": "attachmentId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "liveStreamId",
            "columnName": "liveStreamId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "contentType",
            "columnName": "contentType",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "start",
            "columnName": "start",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "end",
            "columnName": "end",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "treePath",
            "columnName": "treePath",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "UpcomingContentRemoteKeys",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`contentId` INTEGER NOT NULL, `prevKey` INTEGER, `nextKey` INTEGER, `courseId` INTEGER NOT NULL, PRIMARY KEY(`contentId`))",
        "fields": [
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "prevKey",
            "columnName": "prevKey",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "nextKey",
            "columnName": "nextKey",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "courseId",
            "columnName": "courseId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "contentId"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Question",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `questionHtml` TEXT, `directionId` INTEGER, `answers` TEXT NOT NULL, `language` TEXT, `subjectId` INTEGER, `type` TEXT, `translations` TEXT NOT NULL, `marks` TEXT, `negativeMarks` TEXT, `parentId` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "questionHtml",
            "columnName": "questionHtml",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "directionId",
            "columnName": "directionId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "answers",
            "columnName": "answers",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "language",
            "columnName": "language",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "subjectId",
            "columnName": "subjectId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "translations",
            "columnName": "translations",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "marks",
            "columnName": "marks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "negativeMarks",
            "columnName": "negativeMarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parentId",
            "columnName": "parentId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Subject",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `name` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Direction",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `html` TEXT, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "html",
            "columnName": "html",
            "affinity": "TEXT",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "ExamQuestion",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `order` INTEGER, `questionId` INTEGER, `sectionId` INTEGER, `marks` TEXT, `partialMarks` TEXT, `examId` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "questionId",
            "columnName": "questionId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "sectionId",
            "columnName": "sectionId",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "marks",
            "columnName": "marks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "partialMarks",
            "columnName": "partialMarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "examId",
            "columnName": "examId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Language",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `code` TEXT, `title` TEXT, `examId` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "code",
            "columnName": "code",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "examId",
            "columnName": "examId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Section",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `order` INTEGER, `name` TEXT, `duration` TEXT, `cutOff` INTEGER, `instructions` TEXT, `parent` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "cutOff",
            "columnName": "cutOff",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "instructions",
            "columnName": "instructions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "parent",
            "columnName": "parent",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineExam",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `totalMarks` TEXT, `url` TEXT, `attemptsCount` INTEGER, `pausedAttemptsCount` INTEGER, `title` TEXT, `description` TEXT, `startDate` TEXT, `endDate` TEXT, `duration` TEXT, `numberOfQuestions` INTEGER, `negativeMarks` TEXT, `markPerQuestion` TEXT, `templateType` INTEGER, `allowRetake` INTEGER, `allowPdf` INTEGER, `showAnswers` INTEGER, `maxRetakes` INTEGER, `attemptsUrl` TEXT, `deviceAccessControl` TEXT, `commentsCount` INTEGER, `slug` TEXT, `selectedLanguage` TEXT, `variableMarkPerQuestion` INTEGER, `passPercentage` INTEGER, `enableRanks` INTEGER, `showScore` INTEGER, `showPercentile` INTEGER, `categories` TEXT, `isDetailsFetched` INTEGER, `isGrowthHackEnabled` INTEGER, `shareTextForSolutionUnlock` TEXT, `showAnalytics` INTEGER, `instructions` TEXT, `hasAudioQuestions` INTEGER, `rankPublishingDate` TEXT, `enableQuizMode` INTEGER, `disableAttemptResume` INTEGER, `allowPreemptiveSectionEnding` INTEGER, `examDataModifiedOn` TEXT, `isSyncRequired` INTEGER NOT NULL, `contentId` INTEGER, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "totalMarks",
            "columnName": "totalMarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attemptsCount",
            "columnName": "attemptsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "pausedAttemptsCount",
            "columnName": "pausedAttemptsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "numberOfQuestions",
            "columnName": "numberOfQuestions",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "negativeMarks",
            "columnName": "negativeMarks",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "markPerQuestion",
            "columnName": "markPerQuestion",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "templateType",
            "columnName": "templateType",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "allowRetake",
            "columnName": "allowRetake",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "allowPdf",
            "columnName": "allowPdf",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "showAnswers",
            "columnName": "showAnswers",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "maxRetakes",
            "columnName": "maxRetakes",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "attemptsUrl",
            "columnName": "attemptsUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "deviceAccessControl",
            "columnName": "deviceAccessControl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "commentsCount",
            "columnName": "commentsCount",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "slug",
            "columnName": "slug",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "selectedLanguage",
            "columnName": "selectedLanguage",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "variableMarkPerQuestion",
            "columnName": "variableMarkPerQuestion",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "passPercentage",
            "columnName": "passPercentage",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "enableRanks",
            "columnName": "enableRanks",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "showScore",
            "columnName": "showScore",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "showPercentile",
            "columnName": "showPercentile",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "categories",
            "columnName": "categories",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isDetailsFetched",
            "columnName": "isDetailsFetched",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "isGrowthHackEnabled",
            "columnName": "isGrowthHackEnabled",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "shareTextForSolutionUnlock",
            "columnName": "shareTextForSolutionUnlock",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "showAnalytics",
            "columnName": "showAnalytics",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "instructions",
            "columnName": "instructions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "hasAudioQuestions",
            "columnName": "hasAudioQuestions",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "rankPublishingDate",
            "columnName": "rankPublishingDate",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "enableQuizMode",
            "columnName": "enableQuizMode",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "disableAttemptResume",
            "columnName": "disableAttemptResume",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "allowPreemptiveSectionEnding",
            "columnName": "allowPreemptiveSectionEnding",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "examDataModifiedOn",
            "columnName": "examDataModifiedOn",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isSyncRequired",
            "columnName": "isSyncRequired",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "contentId",
            "columnName": "contentId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": false
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineCourseAttempt",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `assessmentId` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "assessmentId",
            "columnName": "assessmentId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineAttempt",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `date` TEXT NOT NULL, `totalQuestions` INTEGER NOT NULL, `lastStartedTime` TEXT NOT NULL, `remainingTime` TEXT NOT NULL, `timeTaken` TEXT NOT NULL, `state` TEXT NOT NULL, `attemptType` INTEGER NOT NULL, `examId` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "date",
            "columnName": "date",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "totalQuestions",
            "columnName": "totalQuestions",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastStartedTime",
            "columnName": "lastStartedTime",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remainingTime",
            "columnName": "remainingTime",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "timeTaken",
            "columnName": "timeTaken",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "attemptType",
            "columnName": "attemptType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "examId",
            "columnName": "examId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineAttemptSection",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER NOT NULL, `attemptSectionId` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `state` TEXT NOT NULL, `remainingTime` TEXT, `name` TEXT, `duration` TEXT, `order` INTEGER NOT NULL, `instructions` TEXT, `attemptId` INTEGER NOT NULL, `sectionId` INTEGER)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "attemptSectionId",
            "columnName": "attemptSectionId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "state",
            "columnName": "state",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "remainingTime",
            "columnName": "remainingTime",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "instructions",
            "columnName": "instructions",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attemptId",
            "columnName": "attemptId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "sectionId",
            "columnName": "sectionId",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "columnNames": [
            "attemptSectionId"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "OfflineAttemptItem",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `question` TEXT NOT NULL, `selectedAnswers` TEXT NOT NULL, `review` INTEGER, `savedAnswers` TEXT NOT NULL, `order` INTEGER NOT NULL, `shortText` TEXT, `currentShortText` TEXT, `attemptSection` TEXT, `essayText` TEXT, `localEssayText` TEXT, `files` TEXT NOT NULL, `unSyncedFiles` TEXT NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "question",
            "columnName": "question",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "selectedAnswers",
            "columnName": "selectedAnswers",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "review",
            "columnName": "review",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "savedAnswers",
            "columnName": "savedAnswers",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "order",
            "columnName": "order",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "shortText",
            "columnName": "shortText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "currentShortText",
            "columnName": "currentShortText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "attemptSection",
            "columnName": "attemptSection",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "essayText",
            "columnName": "essayText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "localEssayText",
            "columnName": "localEssayText",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "files",
            "columnName": "files",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "unSyncedFiles",
            "columnName": "unSyncedFiles",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "columnNames": [
            "id"
          ],
          "autoGenerate": true
        },
        "indices": [],
        "foreignKeys": []
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '8438af03ac4d3fd3e5def989921cddb8')"
    ]
  }
}