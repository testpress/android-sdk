apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    namespace 'in.testpress'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }

    sourceSets {
        androidTest.assets.srcDirs +=
                files("$projectDir/schemas".toString())
    }
}

dependencies {
    api rootProject.constraintLayout
    api rootProject.design
    api rootProject.retrofit2
    api rootProject.gsonConverter
    api rootProject.httpLogInterceptor
    api rootProject.universalImageLoader
    api rootProject.greendao
    api rootProject.shimmer
    api rootProject.junit
    api rootProject.easypermissions
    api rootProject.branchAndroidSDK
    api rootProject.facebookAndroidSdk
    api rootProject.firebaseAnalytics
    api rootProject.pagingRuntime
    api rootProject.fragmentKotlinExtensions
    api rootProject.powerSpinner
    api rootProject.lifecycleViewModelKotlinExtensions
    api rootProject.jsoup
    api rootProject.sentrySDK
    implementation rootProject.androidArchRuntime
    implementation rootProject.coreKotlinExtensions
    implementation rootProject.kotlinStdlibJdk7
    implementation rootProject.androidMultiDexLibrary
    api rootProject.roomRuntime
    api rootProject.roomKotlinExtensions
    api rootProject.roomPaging
    kapt rootProject.roomCompiler
    api rootProject.kotlinxCoroutinesCore
    api rootProject.kotlinxCoroutinesAndroid

    testImplementation rootProject.junit
    testImplementation rootProject.mockito
    testImplementation rootProject.powermockJunit
    testImplementation rootProject.robolectric
    testImplementation rootProject.androidxCore
    testImplementation rootProject.mockServer
    testImplementation (rootProject.powermockMockio) {
        exclude group: 'org.mockito'
    }
    testImplementation rootProject.androidCoreTesting
    testImplementation rootProject.powermockJunit
    testImplementation rootProject.androidxCore
    testImplementation rootProject.mockServer
    androidTestImplementation rootProject.junit
    androidTestImplementation rootProject.testRunner
    androidTestImplementation rootProject.espressoCore
    androidTestImplementation rootProject.uiautomator
    androidTestImplementation rootProject.androidRoomTesting
    androidTestImplementation rootProject.jUnitJupiterAPI
}

apply from: rootProject.file('gradle/gradle-mvn-github-packages.gradle')
repositories {
    mavenCentral()
}
